let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/Code/web/Montcelard-event/front
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +3 src/stores/login.ts
badd +1 src/components/User.vue
badd +5 tsconfig.app.json
badd +1 src/App.vue
badd +4 src/main.ts
badd +1 index.html
badd +32 src/assets/base.css
badd +6 src/router/index.ts
badd +3 src/stores/HomeView.ts
badd +14 src/stores/HomeView.vue
badd +1 src/components/NavBar.vue
badd +2 src/views/HomeView.vue
badd +3 src/components/PanelNav.vue
badd +6347 ~/.local/state/nvim/lsp.log
badd +6 src/assets/main.css
badd +2 src/components/Event.vue
badd +2 ~/Code/web/Montcelard-event/docker/db/migrations/1699408002.sql
badd +1 blank
badd +4 ~/Code/web/Montcelard-event/docker/db/data/event.sql
badd +102 ~/Code/web/Montcelard-event/mk
badd +1 ~/Code/web/Montcelard-event/api/core
badd +32 ~/Code/web/Montcelard-event/api/core/Request.php
badd +59 ~/Code/web/Montcelard-event/api/entity/Login.php
badd +5 src/components/ApiHandler.ts
badd +1 env.d.ts
badd +2 src/components/ApiErrorHandler.ts
badd +1 src/stores/ApiErrorHandler.ts
badd +1 src/stores/apiErrorHandler.ts
badd +1 src/components/apiErrorHandler.ts
badd +1 src/api/ApiErrorHandler.ts
badd +1 src/api/ApiErrorHandle.ts
badd +1 src/api/ApiErrorHandle
badd +46 package.json
badd +13 tsconfig.json
badd +9 tsconfig.node.json
badd +10 vitest.config.ts
badd +4 vite.config.ts
badd +1 tsconfig.vitest.json
badd +8 src/stores/ApiErrorHandle.ts
badd +1 ~/Code/web/Montcelard-event/docker/apache/extra/httpd-vhosts.conf
badd +4 src/helpers/ApiErrorHandle.ts
badd +37 ~/.local/state/nvim/mason.log
badd +1 tsconfig.app.tsbuildinfo
badd +1 tsconfig.vitest.tsbuildinfo
badd +1 tsconfig.node.tsbuildinfo
badd +1 ~/.config/nvim
badd +1 ~/.config/nvim/lua/plugin_config/mason-config.lua
badd +1 ~/Code/web/Montcelard-event/front
badd +1 src/components/Events.vue
badd +3 src/classes/Event.ts
badd +8 src/components/EventProps.ts
argglobal
%argdel
$argadd ~/Code/web/Montcelard-event/front
set stal=2
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit src/App.vue
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 78 + 78) / 156)
exe 'vert 2resize ' . ((&columns * 77 + 78) / 156)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 3 - ((2 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 3
normal! 02|
lcd ~/Code/web/Montcelard-event/front
wincmd w
argglobal
if bufexists(fnamemodify("~/Code/web/Montcelard-event/front/src/router/index.ts", ":p")) | buffer ~/Code/web/Montcelard-event/front/src/router/index.ts | else | edit ~/Code/web/Montcelard-event/front/src/router/index.ts | endif
if &buftype ==# 'terminal'
  silent file ~/Code/web/Montcelard-event/front/src/router/index.ts
endif
balt ~/Code/web/Montcelard-event/front/src/App.vue
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 18 - ((17 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 18
normal! 046|
lcd ~/Code/web/Montcelard-event/front
wincmd w
exe 'vert 1resize ' . ((&columns * 78 + 78) / 156)
exe 'vert 2resize ' . ((&columns * 77 + 78) / 156)
tabnext
edit ~/Code/web/Montcelard-event/front/src/views/HomeView.vue
argglobal
balt ~/Code/web/Montcelard-event/api/entity/Login.php
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 11 - ((10 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 11
normal! 0
lcd ~/Code/web/Montcelard-event/front
tabnext
edit ~/Code/web/Montcelard-event/front/src/components/Events.vue
argglobal
balt ~/Code/web/Montcelard-event/front/src/stores/login.ts
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 42 - ((31 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 42
normal! 031|
lcd ~/Code/web/Montcelard-event/front
tabnext
edit ~/Code/web/Montcelard-event/front/src/components/Event.vue
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 17 + 18) / 37)
exe '2resize ' . ((&lines * 16 + 18) / 37)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 2 - ((1 * winheight(0) + 8) / 17)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 2
normal! 030|
lcd ~/Code/web/Montcelard-event/front
wincmd w
argglobal
if bufexists(fnamemodify("~/Code/web/Montcelard-event/front/src/components", ":p")) | buffer ~/Code/web/Montcelard-event/front/src/components | else | edit ~/Code/web/Montcelard-event/front/src/components | endif
if &buftype ==# 'terminal'
  silent file ~/Code/web/Montcelard-event/front/src/components
endif
balt ~/Code/web/Montcelard-event/front/src/components/Event.vue
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 13 - ((12 * winheight(0) + 8) / 16)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 13
normal! 0
lcd ~/Code/web/Montcelard-event/front
wincmd w
exe '1resize ' . ((&lines * 17 + 18) / 37)
exe '2resize ' . ((&lines * 16 + 18) / 37)
tabnext
edit ~/Code/web/Montcelard-event/front/src/classes/Event.ts
argglobal
balt ~/Code/web/Montcelard-event/front/src/components/Event.vue
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 3 - ((0 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 3
normal! 015|
lcd ~/Code/web/Montcelard-event/front
tabnext
edit ~/Code/web/Montcelard-event/front/src/helpers/ApiErrorHandle.ts
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 12 - ((11 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 12
normal! 0
lcd ~/Code/web/Montcelard-event/front
tabnext
edit ~/Code/web/Montcelard-event/front
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 1 - ((0 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
lcd ~/Code/web/Montcelard-event/front
tabnext
edit ~/.config/nvim/lua/plugin_config/mason-config.lua
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 13 - ((12 * winheight(0) + 17) / 34)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 13
normal! 03|
lcd ~/Code/web/Montcelard-event/front
tabnext 4
set stal=1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
