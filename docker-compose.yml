version: '3.1'

networks:
  web-network:

services:
  apache:
    image: httpd:2.4
    ports:
      - "80:80"
    volumes:
      - ./src:/usr/local/apache2/htdocs/src
      - ./api:/usr/local/apache2/htdocs/api
      - ./front/dist:/usr/local/apache2/htdocs/front
      - ./docker/apache/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./docker/apache/extra/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf
    networks:
      - web-network

  php-cli:
    image: php:8.1-cli
    tty: true # Make it survive longer than 0s
    volumes:
      - ./src:/usr/local/apache2/htdocs/src
      - ./api:/usr/local/apache2/htdocs/api
    networks:
      - web-network

  docker-php-fpm:
    build:
      dockerfile: ./docker/php-fpm/Dockerfile
    environment:
      MYSQL_URL: "${DB_URL}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
      JWT_SECRET: "${JWT_SECRET}"
    volumes:
      - ./src:/usr/local/apache2/htdocs/src
      - ./api:/usr/local/apache2/htdocs/api
    networks:
      - web-network

  docker-db:
    image: mysql
    command: --default-authentication-plugin=caching_sha2_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
    volumes:
      - ./docker/db:/docker-entrypoint-initdb.d
    networks:
      - web-network

  docker-node:
    user: "node"
    build:
      dockerfile: ./front/Dockerfile
    environment:
      NODE_ENV: production
    volumes:
      - ./front:/home/node/app
    networks:
      - web-network
